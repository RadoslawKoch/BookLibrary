package com.rkoch.book.library.entities;

import java.time.LocalDateTime;
import com.rkoch.book.library.entities.definition.Entity;

/**
 *
 * @author rkoch
 */
public class BookOrder implements Entity<Long>{
    
    //Autogenerated PK
    private long id;
    
    //FK
    private Customer customer;
    
    //FK
    private Book book;
    private LocalDateTime startTime = LocalDateTime.now();
    private LocalDateTime endTime;
    private String comment;

    public BookOrder(Customer customer, Book book) {
        this.customer = customer;
        this.book = book;
    }

    @Override
    public Long getId() {
        return id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    public Customer getCustomer() {
        return customer;
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public Book getBook() {
        return book;
    }

    public void setBook(Book book) {
        this.book = book;
    }

    public LocalDateTime getStartTime() {
        return startTime;
    }

    public void setStartTime(LocalDateTime startTime) {
        this.startTime = startTime;
    }

    public LocalDateTime getEndTime() {
        return endTime;
    }

    public void setEndTime(LocalDateTime endTime) {
        this.endTime = endTime;
    }

    public String getComment() {
        return comment;
    }

    public void setComment(String comment) {
        this.comment = comment;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 67 * hash + (int) (this.id ^ (this.id >>> 32));
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final BookOrder other = (BookOrder) obj;
        if (this.id != other.id) {
            return false;
        }
        return true;
    } 
}
